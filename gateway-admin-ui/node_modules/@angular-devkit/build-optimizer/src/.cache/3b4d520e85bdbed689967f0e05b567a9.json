{"remainingRequest":"/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/js-yaml/lib/js-yaml/schema/json.js","dependencies":[{"path":"/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/js-yaml/lib/js-yaml/schema/json.js","mtime":499162500000},{"path":"/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n",null]}