{"remainingRequest":"/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/ng2-bs3-modal/bundles/ng2-bs3-modal.umd.js","dependencies":[{"path":"/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/ng2-bs3-modal/bundles/ng2-bs3-modal.umd.js","mtime":1507232018000},{"path":"/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jenkins/jenkins-slave/workspace/Knox-1.4.0/gateway-admin-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('rxjs/Observable'), require('rxjs/add/observable/fromEvent'), require('rxjs/add/operator/filter'), require('rxjs/Subject'), require('rxjs/add/observable/merge'), require('rxjs/add/observable/of'), require('rxjs/add/observable/zip'), require('rxjs/add/operator/do'), require('rxjs/add/operator/map'), require('rxjs/add/operator/share'), require('rxjs/add/operator/take'), require('rxjs/add/operator/toPromise')) :\n        typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', 'rxjs/Observable', 'rxjs/add/observable/fromEvent', 'rxjs/add/operator/filter', 'rxjs/Subject', 'rxjs/add/observable/merge', 'rxjs/add/observable/of', 'rxjs/add/observable/zip', 'rxjs/add/operator/do', 'rxjs/add/operator/map', 'rxjs/add/operator/share', 'rxjs/add/operator/take', 'rxjs/add/operator/toPromise'], factory) :\n            (factory((global['ng2-bs3-modal'] = {}), global.ng.core, global.ng.common, global.Rx, global.Rx.Observable, global.Rx.Observable.prototype, global.Rx));\n}(this, (function (exports, core, common, Observable, fromEvent, filter, Subject) {\n    'use strict';\n    (function (BsModalHideType) {\n        BsModalHideType[BsModalHideType[\"Close\"] = 0] = \"Close\";\n        BsModalHideType[BsModalHideType[\"Dismiss\"] = 1] = \"Dismiss\";\n        BsModalHideType[BsModalHideType[\"Backdrop\"] = 2] = \"Backdrop\";\n        BsModalHideType[BsModalHideType[\"Keyboard\"] = 3] = \"Keyboard\";\n        BsModalHideType[BsModalHideType[\"RouteChange\"] = 4] = \"RouteChange\";\n        BsModalHideType[BsModalHideType[\"Destroy\"] = 5] = \"Destroy\";\n    })(exports.BsModalHideType || (exports.BsModalHideType = {}));\n    var BsModalSize = /*@__PURE__*/ (function () {\n        function BsModalSize() {\n        }\n        BsModalSize.isValidSize = function (size) {\n            return size && (size === BsModalSize.Small || size === BsModalSize.Large);\n        };\n        BsModalSize.Small = 'sm';\n        BsModalSize.Large = 'lg';\n        return BsModalSize;\n    }());\n    var EVENT_SUFFIX = 'ng2-bs3-modal';\n    var KEYUP_EVENT_NAME = \"keyup.\" + EVENT_SUFFIX;\n    var CLICK_EVENT_NAME = \"click.\" + EVENT_SUFFIX;\n    var SHOW_EVENT_NAME = \"show.bs.modal.\" + EVENT_SUFFIX;\n    var BsModalService = /*@__PURE__*/ (function () {\n        function BsModalService() {\n            var _this = this;\n            this.modals = [];\n            this.$body = jQuery(document.body);\n            this.onBackdropClose$ = Observable.Observable.fromEvent(this.$body, CLICK_EVENT_NAME)\n                .filter(function (e) { return jQuery(e.target).is('.modal'); })\n                .map(function () { return exports.BsModalHideType.Backdrop; })\n                .share();\n            this.onKeyboardClose$ = Observable.Observable.fromEvent(this.$body, KEYUP_EVENT_NAME)\n                .filter(function (e) { return e.which === 27; })\n                .map(function () { return exports.BsModalHideType.Keyboard; })\n                .share();\n            this.onModalStack$ = Observable.Observable.fromEvent(this.$body, SHOW_EVENT_NAME)\n                .do(function () {\n                var zIndex = 1040 + (10 * $('.modal:visible').length);\n                $(_this).css('z-index', zIndex);\n                setTimeout(function () {\n                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');\n                }, 0);\n            })\n                .share();\n        }\n        BsModalService.prototype.add = function (modal) {\n            this.modals.push(modal);\n        };\n        BsModalService.prototype.remove = function (modal) {\n            var index = this.modals.indexOf(modal);\n            if (index > -1)\n                this.modals.splice(index, 1);\n        };\n        BsModalService.prototype.focusNext = function () {\n            var visible = this.modals.filter(function (m) { return m.visible; });\n            if (visible.length) {\n                this.$body.addClass('modal-open');\n                visible[visible.length - 1].focus();\n            }\n        };\n        BsModalService.prototype.dismissAll = function () {\n            return Promise.all(this.modals.map(function (m) {\n                return m.dismiss();\n            }));\n        };\n        BsModalService.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        BsModalService.ctorParameters = function () { return []; };\n        return BsModalService;\n    }());\n    var EVENT_SUFFIX$1 = 'ng2-bs3-modal';\n    var SHOW_EVENT_NAME$1 = \"show.bs.modal.\" + EVENT_SUFFIX$1;\n    var SHOWN_EVENT_NAME = \"shown.bs.modal.\" + EVENT_SUFFIX$1;\n    var HIDE_EVENT_NAME = \"hide.bs.modal.\" + EVENT_SUFFIX$1;\n    var HIDDEN_EVENT_NAME = \"hidden.bs.modal.\" + EVENT_SUFFIX$1;\n    var LOADED_EVENT_NAME = \"loaded.bs.modal.\" + EVENT_SUFFIX$1;\n    var DATA_KEY = 'bs.modal';\n    var BsModalComponent = /*@__PURE__*/ (function () {\n        function BsModalComponent(element, service, zone) {\n            var _this = this;\n            this.element = element;\n            this.service = service;\n            this.zone = zone;\n            this.overrideSize = null;\n            this.onInternalClose$ = new Subject.Subject();\n            this.subscriptions = [];\n            this.visible = false;\n            this.showing = false;\n            this.hiding = false;\n            this.animation = true;\n            this.backdrop = true;\n            this.keyboard = true;\n            this.onShow = new core.EventEmitter();\n            this.onOpen = new core.EventEmitter();\n            this.onHide = new core.EventEmitter();\n            this.onClose = new core.EventEmitter();\n            this.onDismiss = new core.EventEmitter();\n            this.onLoaded = new core.EventEmitter();\n            this.setVisible = function (isVisible) {\n                return function () {\n                    _this.visible = isVisible;\n                    _this.showing = false;\n                    _this.hiding = false;\n                };\n            };\n            this.setOptions = function (options) {\n                var backdrop = options.backdrop;\n                if (typeof backdrop === 'string' && backdrop !== 'static')\n                    backdrop = true;\n                if (options.backdrop !== undefined)\n                    _this.options.backdrop = backdrop;\n                if (options.keyboard !== undefined)\n                    _this.options.keyboard = options.keyboard;\n            };\n            this.service.add(this);\n            this.init();\n        }\n        Object.defineProperty(BsModalComponent.prototype, \"options\", {\n            get: function () {\n                if (!this.$modal)\n                    this.init();\n                return this.$modal.data(DATA_KEY).options;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BsModalComponent.prototype, \"fadeClass\", {\n            get: function () { return this.animation; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BsModalComponent.prototype, \"modalClass\", {\n            get: function () { return true; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BsModalComponent.prototype, \"roleAttr\", {\n            get: function () { return 'dialog'; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BsModalComponent.prototype, \"tabindexAttr\", {\n            get: function () { return '-1'; },\n            enumerable: true,\n            configurable: true\n        });\n        BsModalComponent.prototype.ngOnInit = function () {\n            this.wireUpEventEmitters();\n        };\n        BsModalComponent.prototype.ngAfterViewInit = function () {\n            this.$dialog = this.$modal.find('.modal-dialog');\n        };\n        BsModalComponent.prototype.ngOnChanges = function () {\n            this.setOptions({\n                backdrop: this.backdrop,\n                keyboard: this.keyboard\n            });\n        };\n        BsModalComponent.prototype.ngOnDestroy = function () {\n            this.onInternalClose$.next(exports.BsModalHideType.Destroy);\n            return this.destroy();\n        };\n        BsModalComponent.prototype.focus = function () {\n            this.$modal.trigger('focus');\n        };\n        BsModalComponent.prototype.routerCanDeactivate = function () {\n            this.onInternalClose$.next(exports.BsModalHideType.RouteChange);\n            return this.destroy();\n        };\n        BsModalComponent.prototype.open = function (size) {\n            this.overrideSize = null;\n            if (BsModalSize.isValidSize(size))\n                this.overrideSize = size;\n            return this.show().toPromise();\n        };\n        BsModalComponent.prototype.close = function (value) {\n            var _this = this;\n            this.onInternalClose$.next(exports.BsModalHideType.Close);\n            return this.hide()\n                .do(function () { return _this.onClose.emit(value); })\n                .toPromise()\n                .then(function () { return value; });\n        };\n        BsModalComponent.prototype.dismiss = function () {\n            this.onInternalClose$.next(exports.BsModalHideType.Dismiss);\n            return this.hide().toPromise();\n        };\n        BsModalComponent.prototype.getCssClasses = function () {\n            var classes = [];\n            if (this.isSmall()) {\n                classes.push('modal-sm');\n            }\n            if (this.isLarge()) {\n                classes.push('modal-lg');\n            }\n            if (this.cssClass) {\n                classes.push(this.cssClass);\n            }\n            return classes.join(' ');\n        };\n        BsModalComponent.prototype.isSmall = function () {\n            return this.overrideSize !== BsModalSize.Large\n                && this.size === BsModalSize.Small\n                || this.overrideSize === BsModalSize.Small;\n        };\n        BsModalComponent.prototype.isLarge = function () {\n            return this.overrideSize !== BsModalSize.Small\n                && this.size === BsModalSize.Large\n                || this.overrideSize === BsModalSize.Large;\n        };\n        BsModalComponent.prototype.show = function () {\n            var _this = this;\n            if (this.visible && !this.hiding)\n                return Observable.Observable.of(null);\n            this.showing = true;\n            return Observable.Observable.create(function (o) {\n                _this.onShown$.take(1).subscribe(function (next) {\n                    o.next(next);\n                    o.complete();\n                });\n                _this.transitionFix();\n                _this.$modal.modal('show');\n            });\n        };\n        BsModalComponent.prototype.transitionFix = function () {\n            var _this = this;\n            // Fix for shown.bs.modal not firing when .fade is present\n            // https://github.com/twbs/bootstrap/issues/11793\n            if (this.animation) {\n                setTimeout(function () {\n                    _this.$modal.trigger('focus').trigger(SHOWN_EVENT_NAME);\n                }, $.fn.modal['Constructor'].TRANSITION_DURATION);\n            }\n        };\n        BsModalComponent.prototype.hide = function () {\n            var _this = this;\n            if (!this.visible && !this.showing)\n                return Observable.Observable.of(null);\n            this.hiding = true;\n            return Observable.Observable.create(function (o) {\n                _this.onHidden$.take(1).subscribe(function (next) {\n                    o.next(next);\n                    o.complete();\n                });\n                _this.$modal.modal('hide');\n            });\n        };\n        BsModalComponent.prototype.init = function () {\n            var _this = this;\n            this.$modal = jQuery(this.element.nativeElement);\n            this.$modal.appendTo(document.body);\n            this.$modal.modal({\n                show: false\n            });\n            this.onShowEvent$ = Observable.Observable.fromEvent(this.$modal, SHOW_EVENT_NAME$1);\n            this.onShownEvent$ = Observable.Observable.fromEvent(this.$modal, SHOWN_EVENT_NAME);\n            this.onHideEvent$ = Observable.Observable.fromEvent(this.$modal, HIDE_EVENT_NAME);\n            this.onHiddenEvent$ = Observable.Observable.fromEvent(this.$modal, HIDDEN_EVENT_NAME);\n            this.onLoadedEvent$ = Observable.Observable.fromEvent(this.$modal, LOADED_EVENT_NAME);\n            var onClose$ = Observable.Observable\n                .merge(this.onInternalClose$, this.service.onBackdropClose$, this.service.onKeyboardClose$);\n            this.onHide$ = Observable.Observable.zip(this.onHideEvent$, onClose$)\n                .map(function (x) { return ({ event: x[0], type: x[1] }); });\n            this.onHidden$ = Observable.Observable.zip(this.onHiddenEvent$, onClose$)\n                .map(function (x) { return x[1]; })\n                .do(this.setVisible(false))\n                .do(function () { return _this.service.focusNext(); })\n                .share();\n            this.onShown$ = this.onShownEvent$\n                .do(this.setVisible(true))\n                .share();\n            this.onDismiss$ = this.onHidden$\n                .filter(function (x) { return x !== exports.BsModalHideType.Close; });\n            // Start watching for events\n            (_a = this.subscriptions).push.apply(_a, [\n                this.onShown$.subscribe(function () { }),\n                this.onHidden$.subscribe(function () { }),\n                this.service.onModalStack$.subscribe(function () { })\n            ]);\n            var _a;\n        };\n        BsModalComponent.prototype.wireUpEventEmitters = function () {\n            this.wireUpEventEmitter(this.onShow, this.onShowEvent$);\n            this.wireUpEventEmitter(this.onOpen, this.onShown$);\n            this.wireUpEventEmitter(this.onHide, this.onHide$);\n            this.wireUpEventEmitter(this.onDismiss, this.onDismiss$);\n            this.wireUpEventEmitter(this.onLoaded, this.onLoadedEvent$);\n        };\n        BsModalComponent.prototype.wireUpEventEmitter = function (emitter, stream$) {\n            var _this = this;\n            if (emitter.observers.length === 0)\n                return;\n            var sub = stream$.subscribe(function (next) {\n                _this.zone.run(function () {\n                    emitter.next(next);\n                });\n            });\n            this.subscriptions.push(sub);\n        };\n        BsModalComponent.prototype.destroy = function () {\n            var _this = this;\n            return this.hide().do(function () {\n                _this.service.remove(_this);\n                _this.subscriptions.forEach(function (s) { return s.unsubscribe(); });\n                _this.subscriptions = [];\n                if (_this.$modal) {\n                    _this.$modal.data(DATA_KEY, null);\n                    _this.$modal.remove();\n                    _this.$modal = null;\n                }\n            }).toPromise();\n        };\n        BsModalComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'bs-modal',\n                        template: \"\\n        <div class=\\\"modal-dialog\\\" [ngClass]=\\\"getCssClasses()\\\">\\n            <div class=\\\"modal-content\\\">\\n                <ng-content></ng-content>\\n            </div>\\n        </div>\\n    \"\n                    },] },\n        ];\n        /** @nocollapse */\n        BsModalComponent.ctorParameters = function () {\n            return [\n                { type: core.ElementRef, },\n                { type: BsModalService, },\n                { type: core.NgZone, },\n            ];\n        };\n        BsModalComponent.propDecorators = {\n            'animation': [{ type: core.Input },],\n            'backdrop': [{ type: core.Input },],\n            'keyboard': [{ type: core.Input },],\n            'size': [{ type: core.Input },],\n            'cssClass': [{ type: core.Input },],\n            'onShow': [{ type: core.Output },],\n            'onOpen': [{ type: core.Output },],\n            'onHide': [{ type: core.Output },],\n            'onClose': [{ type: core.Output },],\n            'onDismiss': [{ type: core.Output },],\n            'onLoaded': [{ type: core.Output },],\n            'fadeClass': [{ type: core.HostBinding, args: ['class.fade',] },],\n            'modalClass': [{ type: core.HostBinding, args: ['class.modal',] },],\n            'roleAttr': [{ type: core.HostBinding, args: ['attr.role',] },],\n            'tabindexAttr': [{ type: core.HostBinding, args: ['attr.tabindex',] },],\n        };\n        return BsModalComponent;\n    }());\n    var BsModalHeaderComponent = /*@__PURE__*/ (function () {\n        function BsModalHeaderComponent(modal) {\n            this.modal = modal;\n            this.showDismiss = false;\n        }\n        BsModalHeaderComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'bs-modal-header',\n                        template: \"\\n        <div class=\\\"modal-header\\\">\\n            <button *ngIf=\\\"showDismiss\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Dismiss\\\" (click)=\\\"modal.dismiss()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n            <ng-content></ng-content>\\n        </div>\\n    \"\n                    },] },\n        ];\n        /** @nocollapse */\n        BsModalHeaderComponent.ctorParameters = function () {\n            return [\n                { type: BsModalComponent, },\n            ];\n        };\n        BsModalHeaderComponent.propDecorators = {\n            'showDismiss': [{ type: core.Input },],\n        };\n        return BsModalHeaderComponent;\n    }());\n    var BsModalBodyComponent = /*@__PURE__*/ (function () {\n        function BsModalBodyComponent() {\n        }\n        BsModalBodyComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'bs-modal-body',\n                        template: \"\\n        <div class=\\\"modal-body\\\">\\n            <ng-content></ng-content>\\n        </div>\\n    \"\n                    },] },\n        ];\n        /** @nocollapse */\n        BsModalBodyComponent.ctorParameters = function () { return []; };\n        return BsModalBodyComponent;\n    }());\n    var BsModalFooterComponent = /*@__PURE__*/ (function () {\n        function BsModalFooterComponent(modal) {\n            this.modal = modal;\n            this.showDefaultButtons = false;\n            this.dismissButtonLabel = 'Dismiss';\n            this.closeButtonLabel = 'Close';\n        }\n        BsModalFooterComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'bs-modal-footer',\n                        template: \"\\n        <div class=\\\"modal-footer\\\">\\n            <ng-content></ng-content>\\n            <button *ngIf=\\\"showDefaultButtons\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"modal.dismiss()\\\">\\n                {{dismissButtonLabel}}\\n            </button>\\n            <button *ngIf=\\\"showDefaultButtons\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"modal.close()\\\">\\n                {{closeButtonLabel}}\\n              </button>\\n        </div>\\n    \"\n                    },] },\n        ];\n        /** @nocollapse */\n        BsModalFooterComponent.ctorParameters = function () {\n            return [\n                { type: BsModalComponent, },\n            ];\n        };\n        BsModalFooterComponent.propDecorators = {\n            'showDefaultButtons': [{ type: core.Input },],\n            'dismissButtonLabel': [{ type: core.Input },],\n            'closeButtonLabel': [{ type: core.Input },],\n        };\n        return BsModalFooterComponent;\n    }());\n    var BsAutofocusDirective = /*@__PURE__*/ (function () {\n        function BsAutofocusDirective(el, modal) {\n            var _this = this;\n            this.el = el;\n            this.modal = modal;\n            if (modal) {\n                this.modal.onOpen.subscribe(function () {\n                    _this.el.nativeElement.focus();\n                });\n            }\n        }\n        BsAutofocusDirective.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[autofocus]'\n                    },] },\n        ];\n        /** @nocollapse */\n        BsAutofocusDirective.ctorParameters = function () {\n            return [\n                { type: core.ElementRef, },\n                { type: BsModalComponent, decorators: [{ type: core.Optional },] },\n            ];\n        };\n        return BsAutofocusDirective;\n    }());\n    var BsModalModule = /*@__PURE__*/ (function () {\n        function BsModalModule() {\n        }\n        BsModalModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule\n                        ],\n                        declarations: [\n                            BsModalComponent,\n                            BsModalHeaderComponent,\n                            BsModalBodyComponent,\n                            BsModalFooterComponent,\n                            BsAutofocusDirective\n                        ],\n                        providers: [\n                            BsModalService\n                        ],\n                        exports: [\n                            BsModalComponent,\n                            BsModalHeaderComponent,\n                            BsModalBodyComponent,\n                            BsModalFooterComponent,\n                            BsAutofocusDirective\n                        ]\n                    },] },\n        ];\n        /** @nocollapse */\n        BsModalModule.ctorParameters = function () { return []; };\n        return BsModalModule;\n    }());\n    exports.BsModalModule = BsModalModule;\n    exports.BsModalService = BsModalService;\n    exports.BsModalComponent = BsModalComponent;\n    exports.BsModalHeaderComponent = BsModalHeaderComponent;\n    exports.BsModalBodyComponent = BsModalBodyComponent;\n    exports.BsModalFooterComponent = BsModalFooterComponent;\n    exports.BsModalSize = BsModalSize;\n    Object.defineProperty(exports, '__esModule', { value: true });\n})));\n//# sourceMappingURL=ng2-bs3-modal.umd.js.map\n",null]}